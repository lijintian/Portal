<?xml version="1.0" encoding="utf-8"?>
<unity xmlns="http://schemas.microsoft.com/practices/2010/unity">
  <alias alias="request" type="Microsoft.Practices.Unity.PerRequestLifetimeManager, Microsoft.Practices.Unity.Mvc" />

  <!--注册类型别名-->
  <alias alias="IJson" type="Framework.Infrastructure.Crosscutting.Json.IJson, Framework.Infrastructure.Crosscutting" />
  <alias alias="ServiceStackTextJson" type="Framework.Infrastructure.Json.ServiceStackTextJson, Framework.Infrastructure.Json.ServiceStackText" />

  <alias alias="ILog" type="Framework.Infrastructure.Crosscutting.Logging.ILog, Framework.Infrastructure.Crosscutting" />
  <alias alias="Log4NetLog" type="Framework.Infrastructure.Logging.Log4NetLog, Framework.Infrastructure.Logging.log4net" />

  <alias alias="ICache" type="Framework.Infrastructure.Crosscutting.Caching.ICache, Framework.Infrastructure.Crosscutting" />
  <alias alias="MemcachedCache" type="Framework.Infrastructure.Caching.Memcached.MemcachedCache, Framework.Infrastructure.Caching.Memcached" />

  <alias alias="ITypeAdapter" type="Framework.Infrastructure.Crosscutting.Adapter.ITypeAdapter, Framework.Infrastructure.Crosscutting" />
  <alias alias="AutomapperTypeAdapter" type="Framework.Infrastructure.Adapter.AutoMapper.AutomapperTypeAdapter, Framework.Infrastructure.Adapter.AutoMapper" />

  <alias alias="IEventBus" type="Framework.Infrastructure.Crosscutting.Events.IEventBus, Framework.Infrastructure.Crosscutting" />
  <alias alias="DefaultEventBus" type="Framework.Infrastructure.Crosscutting.Events.DefaultEventBus, Framework.Infrastructure.Crosscutting" />

  <alias alias="IEventAggregator" type="Framework.Infrastructure.Crosscutting.Events.IEventAggregator, Framework.Infrastructure.Crosscutting" />
  <alias alias="EventAggregator" type="Framework.Infrastructure.Crosscutting.Events.EventAggregator, Framework.Infrastructure.Crosscutting" />

  <alias alias="IMapping" type="Framework.Domain.Core.IMapping, Framework.Domain.Core" />
  <alias alias="Mapping" type="Portal.Infrastructure.Data.MongoDB.Repository.Mapping, Portal.Infrastructure.Data.MongoDB.Repository" />

  <alias alias="IIdentityGenerator" type="Framework.Domain.Core.IIdentityGenerator, Framework.Domain.Core" />
  <alias alias="MongoDBStringObjectIdGenerator" type="Framework.Infrastructure.Data.MongoDB.MongoDBStringObjectIdGenerator, Framework.Infrastructure.Data.MongoDB" />

  <alias alias="IRepositoryContext" type="Framework.Domain.Core.IRepositoryContext, Framework.Domain.Core" />
  <alias alias="MongoDBRepositoryContext" type="Framework.Infrastructure.Data.MongoDB.MongoDBRepositoryContext, Framework.Infrastructure.Data.MongoDB" />
  <alias alias="IMongoDBRepositoryContext" type="Framework.Infrastructure.Data.MongoDB.IMongoDBRepositoryContext, Framework.Infrastructure.Data.MongoDB" />

  <!-- 仓储 -->
  <alias alias="IUserRepository" type="Portal.Domain.Repositories.IUserRepository, Portal.Domain" />
  <alias alias="UserRepository" type="Portal.Infrastructure.Data.MongoDB.Repository.UserRepository, Portal.Infrastructure.Data.MongoDB.Repository" />

  <alias alias="IDeveloperAppRepository" type="Portal.Domain.Repositories.IDeveloperAppRepository, Portal.Domain" />
  <alias alias="DeveloperAppRepository" type="Portal.Infrastructure.Data.MongoDB.Repository.DeveloperAppRepository, Portal.Infrastructure.Data.MongoDB.Repository" />

  <alias alias="IPermissionRepository" type="Portal.Domain.Repositories.IPermissionRepository, Portal.Domain" />
  <alias alias="PermissionRepository" type="Portal.Infrastructure.Data.MongoDB.Repository.PermissionRepository, Portal.Infrastructure.Data.MongoDB.Repository" />

  <alias alias="IRoleRepository" type="Portal.Domain.Repositories.IRoleRepository, Portal.Domain" />
  <alias alias="RoleRepository" type="Portal.Infrastructure.Data.MongoDB.Repository.RoleRepository, Portal.Infrastructure.Data.MongoDB.Repository" />

  <alias alias="IApiPermissionGroupRepository" type="Portal.Domain.Repositories.IApiPermissionGroupRepository, Portal.Domain" />
  <alias alias="ApiPermissionGroupRepository" type="Portal.Infrastructure.Data.MongoDB.Repository.ApiPermissionGroupRepository, Portal.Infrastructure.Data.MongoDB.Repository" />

  <alias alias="ISysLoggerRepository" type="Portal.Domain.Repositories.ISysLoggerRepository, Portal.Domain" />
  <alias alias="SysLoggerRepository" type="Portal.Infrastructure.Data.MongoDB.Repository.SysLoggerRepository, Portal.Infrastructure.Data.MongoDB.Repository" />
  <!-- 领域服务-->
  <alias alias="ILoginService" type="Portal.Domain.Services.ILoginService, Portal.Domain" />
  <alias alias="LoginService" type="Portal.Domain.Services.Impl.LoginService, Portal.Domain" />

  <!-- 领域事件-->
  <alias alias="IDomainEventHandler" type="Framework.Domain.Core.Events.IDomainEventHandler`1, Framework.Domain.Core" />

  <alias alias="ValidateUserExistsSameLoginNameEvent" type="Portal.Domain.Aggregates.UserAgg.Events.ValidateUserExistsSameLoginNameEvent, Portal.Domain" />
  <alias alias="ValidateUserExistsSameLoginNameEventHandler" type="Portal.Domain.Aggregates.UserAgg.Events.Handlers.ValidateUserExistsSameLoginNameEventHandler, Portal.Domain" />

  <alias alias="ValidateUserExistsSameEmployeeNoEvent" type="Portal.Domain.Aggregates.UserAgg.Events.ValidateUserExistsSameEmployeeNoEvent, Portal.Domain" />
  <alias alias="ValidateUserExistsSameEmployeeNoEventHandler" type="Portal.Domain.Aggregates.UserAgg.Events.Handlers.ValidateUserExistsSameEmployeeNoEventHandler, Portal.Domain" />

  <alias alias="ValidateApiPermissionGroupExistsEvent" type="Portal.Domain.Aggregates.ApiPermissionGroupAgg.Events.ValidateApiPermissionGroupExistsEvent, Portal.Domain" />
  <alias alias="ValidateApiPermissionGroupExistsEventHandler" type="Portal.Domain.Aggregates.ApiPermissionGroupAgg.Events.Handlers.ValidateApiPermissionGroupExistsEventHandler, Portal.Domain" />

  <alias alias="ValidateDeveloperAppExistsSameNameEvent" type="Portal.Domain.Aggregates.DeveloperAppAgg.Events.ValidateDeveloperAppExistsSameNameEvent, Portal.Domain" />
  <alias alias="ValidateDeveloperAppExistsSameNameEventHandler" type="Portal.Domain.Aggregates.DeveloperAppAgg.Events.Handlers.ValidateDeveloperAppExistsSameNameEventHandler, Portal.Domain" />

  <!-- 应用层服务-->
  <alias alias="ILoginMangerService" type="Portal.Applications.Services.ILoginMangerService, Portal.Applications" />
  <alias alias="LoginMangerService" type="Portal.Applications.Services.Impl.LoginMangerService, Portal.Applications" />

  <alias alias="IUserManagerService" type="Portal.Applications.Services.IUserManagerService, Portal.Applications" />
  <alias alias="UserManagerService" type="Portal.Applications.Services.Impl.UserManagerService, Portal.Applications" />

  <alias alias="IDeveloperAppManagerService" type="Portal.Applications.Services.IDeveloperAppManagerService, Portal.Applications" />
  <alias alias="DeveloperAppManagerService" type="Portal.Applications.Services.Impl.DeveloperAppManagerService, Portal.Applications" />

  <alias alias="IPermissionManagerService" type="Portal.Applications.Services.IPermissionManagerService, Portal.Applications" />
  <alias alias="PermissionManagerService" type="Portal.Applications.Services.Impl.PermissionManagerService, Portal.Applications" />

  <alias alias="IRoleManagerService" type="Portal.Applications.Services.IRoleManagerService, Portal.Applications" />
  <alias alias="RoleManagerService" type="Portal.Applications.Services.Impl.RoleManagerService, Portal.Applications" />

  <alias alias="IApiPermissionGroupManagerService" type="Portal.Applications.Services.IApiPermissionGroupManagerService, Portal.Applications" />
  <alias alias="ApiPermissionGroupManagerService" type="Portal.Applications.Services.Impl.ApiPermissionGroupManagerService, Portal.Applications" />

  <alias alias="ISysLoggerManagerService" type="Portal.Applications.Services.ISysLoggerManagerService, Portal.Applications" />
  <alias alias="SysLoggerManagerService" type="Portal.Applications.Services.Impl.SysLoggerManagerService, Portal.Applications" />

  <!-- 策略 -->
  <alias alias="ITokenDeserializeStrategy" type="Portal.Domain.Model.Strategies.ITokenDeserializeStrategy, Portal.Domain" />
  <alias alias="TokenDeserializeStrategy" type="Portal.Domain.Model.Strategies.TokenDeserializeStrategy, Portal.Domain" />

  <alias alias="ITokenGenerateStrategy" type="Portal.Domain.Model.Strategies.ITokenGenerateStrategy, Portal.Domain" />
  <alias alias="TokenGenerateStrategy" type="Portal.Domain.Model.Strategies.TokenGenerateStrategy, Portal.Domain" />

  <alias alias="IPasswordEncryptStrategy" type="Portal.Domain.Aggregates.UserAgg.Strategies.IPasswordEncryptStrategy, Portal.Domain" />
  <alias alias="PasswordEncryptStrategy" type="Portal.Domain.Aggregates.UserAgg.Strategies.PasswordEncryptStrategy, Portal.Domain" />

  <alias alias="IAuthenticateTicketGenerateStategy" type="Portal.Domain.Aggregates.DeveloperAppAgg.Strategies.IAuthenticateTicketGenerateStategy, Portal.Domain" />
  <alias alias="AuthenticateTicketGenerateStategy" type="Portal.Domain.Aggregates.DeveloperAppAgg.Strategies.AuthenticateTicketGenerateStategy, Portal.Domain" />

  <alias alias="ICodeGenreateStrategy" type="Portal.Domain.Aggregates.AuthorizationCodeAgg.Strategies.ICodeGenreateStrategy, Portal.Domain" />
  <alias alias="CodeGenreateStrategy" type="Portal.Domain.Aggregates.AuthorizationCodeAgg.Strategies.CodeGenreateStrategy, Portal.Domain" />

  <alias alias="IAccessTokenValueGenerateStrategy" type="Portal.Domain.Aggregates.TokenWrapperAgg.Strategies.IAccessTokenValueGenerateStrategy, Portal.Domain" />
  <alias alias="AccessTokenValueGenerateStrategy" type="Portal.Domain.Aggregates.TokenWrapperAgg.Strategies.AccessTokenValueGenerateStrategy, Portal.Domain" />

  <alias alias="IRefreshTokenValueGenerateStrategy" type="Portal.Domain.Aggregates.TokenWrapperAgg.Strategies.IRefreshTokenValueGenerateStrategy, Portal.Domain" />
  <alias alias="RefreshTokenValueGenerateStrategy" type="Portal.Domain.Aggregates.TokenWrapperAgg.Strategies.RefreshTokenValueGenerateStrategy, Portal.Domain" />

  <container>
    <register type="IJson" mapTo="ServiceStackTextJson">
      <lifetime type="singleton" />
    </register>

    <register type="ILog" mapTo="Log4NetLog">
      <lifetime type="singleton" />
    </register>

    <register type="ICache" mapTo="MemcachedCache">
      <lifetime type="singleton" />
    </register>

    <register type="ITypeAdapter" mapTo="AutomapperTypeAdapter">
      <lifetime type="singleton" />
    </register>

    <register type="IEventBus" mapTo="DefaultEventBus">
      <lifetime type="request" />
    </register>

    <register type="IMapping" mapTo="Mapping">
      <lifetime type="singleton" />
    </register>

    <!--Event Aggregator-->
    <register type="IEventAggregator" mapTo="EventAggregator">
      <constructor>
        <param name="handlers">
          <array>
          </array>
        </param>
      </constructor>
    </register>
    <!--Event Aggregator-->
    <register type="IIdentityGenerator" mapTo="MongoDBStringObjectIdGenerator">
      <lifetime type="singleton" />
    </register>
    <register type="IRepositoryContext" mapTo="MongoDBRepositoryContext">
      <lifetime type="request" />
      <constructor>
        <param name="name" value="PortalDB">
        </param>
      </constructor>
    </register>
    <register type="IMongoDBRepositoryContext" mapTo="MongoDBRepositoryContext">
      <lifetime type="request" />
      <constructor>
        <param name="name" value="PortalDB">
        </param>
      </constructor>
    </register>
    <!--仓储 repository-->
    <register type="IUserRepository" mapTo="UserRepository">
      <lifetime type="request" />
    </register>
    <register type="IDeveloperAppRepository" mapTo="DeveloperAppRepository">
      <lifetime type="request" />
    </register>
    <register type="IPermissionRepository" mapTo="PermissionRepository">
      <lifetime type="request" />
    </register>
    <register type="IRoleRepository" mapTo="RoleRepository">
      <lifetime type="request" />
    </register>
    <register type="IApiPermissionGroupRepository" mapTo="ApiPermissionGroupRepository">
      <lifetime type="request" />
    </register>
    <register type="ISysLoggerRepository" mapTo="SysLoggerRepository">
      <lifetime type="request" />
    </register>

    <!--领域服务 domain service-->
    <register type="ILoginService" mapTo="LoginService" >
      <lifetime type="request" />
    </register>

    <!--应用层服务 app service-->
    <register type="ILoginMangerService" mapTo="LoginMangerService" >
      <lifetime type="request" />
    </register>
    <register type="IUserManagerService" mapTo="UserManagerService" >
      <lifetime type="request" />
    </register>
    <register type="IDeveloperAppManagerService" mapTo="DeveloperAppManagerService" >
      <lifetime type="request" />
    </register>
    <register type="IPermissionManagerService" mapTo="PermissionManagerService" >
      <lifetime type="request" />
    </register>
    <register type="IRoleManagerService" mapTo="RoleManagerService" >
      <lifetime type="request" />
    </register>
    <register type="IApiPermissionGroupManagerService" mapTo="ApiPermissionGroupManagerService" >
      <lifetime type="request" />
    </register>
    <register type="ISysLoggerManagerService" mapTo="SysLoggerManagerService" >
      <lifetime type="request" />
    </register>

    <!--领域层策略-->
    <register type="ITokenDeserializeStrategy" mapTo="TokenDeserializeStrategy" >
      <lifetime type="request"/>
    </register>
    <register type="ITokenGenerateStrategy" mapTo="TokenGenerateStrategy" >
      <lifetime type="request"/>
    </register>

    <register type="IPasswordEncryptStrategy" mapTo="PasswordEncryptStrategy" >
      <lifetime type="request"/>
    </register>

    <register type="IAuthenticateTicketGenerateStategy" mapTo="AuthenticateTicketGenerateStategy" >
      <lifetime type="request"/>
    </register>

    <register type="ICodeGenreateStrategy" mapTo="CodeGenreateStrategy" >
      <lifetime type="request"/>
    </register>

    <register type="IAccessTokenValueGenerateStrategy" mapTo="AccessTokenValueGenerateStrategy" >
      <lifetime type="request"/>
    </register>

    <register type="IRefreshTokenValueGenerateStrategy" mapTo="RefreshTokenValueGenerateStrategy" >
      <lifetime type="request"/>
    </register>

    <!--领域层策略-->
    <register type="IDomainEventHandler[ValidateUserExistsSameLoginNameEvent]" mapTo="ValidateUserExistsSameLoginNameEventHandler" name="ValidateUserExistsSameLoginNameEventHandler"/>
    <register type="IDomainEventHandler[ValidateUserExistsSameEmployeeNoEvent]" mapTo="ValidateUserExistsSameEmployeeNoEventHandler" name="ValidateUserExistsSameEmployeeNoEventHandler"/>
    <register type="IDomainEventHandler[ValidateApiPermissionGroupExistsEvent]" mapTo="ValidateApiPermissionGroupExistsEventHandler" name="ValidateApiPermissionGroupExistsEventHandler"/>
    <register type="IDomainEventHandler[ValidateDeveloperAppExistsSameNameEvent]" mapTo="ValidateDeveloperAppExistsSameNameEventHandler" name="ValidateDeveloperAppExistsSameNameEventHandler"/>
  </container>
</unity>